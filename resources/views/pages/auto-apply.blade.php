@extends('layouts.app')

@section('title', '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–∫–ª–∏–∫ - JobFinder')

@section('content')
<div class="auto-apply-page">
    <div class="auto-apply-container">
        <div class="auto-apply-header">
            <h1 class="auto-apply-title">ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏–∏</h1>
            <p class="auto-apply-subtitle">–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º</p>
        </div>

        <div class="auto-apply-form-container">
            <form id="autoApplyForm" class="auto-apply-form">
                @csrf

                <!-- –í—ã–±–æ—Ä —Ä–µ–∑—é–º–µ -->
                <div class="form-section">
                    <h3>üìÑ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∑—é–º–µ</h3>
                    @if(empty($resumes))
                        <div class="alert alert-warning">
                            <p>‚ùå –£ –≤–∞—Å –Ω–µ—Ç —Ä–µ–∑—é–º–µ. <a href="{{ route('resumes') }}">–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª —Ä–µ–∑—é–º–µ</a> –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è.</p>
                        </div>
                    @else
                        <div class="resume-selection">
                            @foreach($resumes as $resume)
                                <label class="resume-option">
                                    <input type="radio" name="resume_id" value="{{ $resume['id'] }}" required>
                                    <div class="resume-card">
                                        <h4>{{ $resume['title'] }}</h4>
                                        <p>–û–±–Ω–æ–≤–ª–µ–Ω–æ: {{ date('d.m.Y', strtotime($resume['updated_at'])) }}</p>
                                        @if(isset($resume['status']))
                                            <span class="resume-status status-{{ $resume['status']['id'] }}">
                                                {{ $resume['status']['name'] }}
                                            </span>
                                        @endif
                                    </div>
                                </label>
                            @endforeach
                        </div>
                    @endif
                </div>

                <!-- –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ -->
                <div class="form-section">
                    <h3>üîç –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π</h3>

                    <div class="search-params">
                        <div class="param-group">
                            <label>–ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å *</label>
                            <input type="text" name="text" placeholder="–î–æ–ª–∂–Ω–æ—Å—Ç—å, –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞" required class="form-input">
                        </div>

                        <div class="param-row">
                            <div class="param-group">
                                <label>–†–µ–≥–∏–æ–Ω</label>
                                <select name="area" class="form-select">
                                    <option value="">–õ—é–±–æ–π —Ä–µ–≥–∏–æ–Ω</option>
                                    @if(isset($dictionaries['areas']))
                                        @foreach($dictionaries['areas'] as $area)
                                            <option value="{{ $area['id'] }}">{{ $area['name'] }}</option>
                                        @endforeach
                                    @endif
                                </select>
                            </div>

                            <div class="param-group">
                                <label>–ó–∞—Ä–ø–ª–∞—Ç–∞ –æ—Ç</label>
                                <input type="number" name="salary_from" placeholder="0" class="form-input">
                            </div>
                        </div>

                        <div class="param-row">
                            <div class="param-group">
                                <label>–¢–∏–ø –∑–∞–Ω—è—Ç–æ—Å—Ç–∏</label>
                                <select name="employment" class="form-select">
                                    <option value="">–õ—é–±–æ–π —Ç–∏–ø</option>
                                    @if(isset($dictionaries['dictionaries']['employment']))
                                        @foreach($dictionaries['dictionaries']['employment'] as $employment)
                                            <option value="{{ $employment['id'] }}">{{ $employment['name'] }}</option>
                                        @endforeach
                                    @endif
                                </select>
                            </div>

                            <div class="param-group">
                                <label>–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã</label>
                                <select name="experience" class="form-select">
                                    <option value="">–õ—é–±–æ–π –æ–ø—ã—Ç</option>
                                    @if(isset($dictionaries['dictionaries']['experience']))
                                        @foreach($dictionaries['dictionaries']['experience'] as $experience)
                                            <option value="{{ $experience['id'] }}">{{ $experience['name'] }}</option>
                                        @endforeach
                                    @endif
                                </select>
                            </div>
                        </div>

                        <div class="param-group">
                            <label class="checkbox-label">
                                <input type="checkbox" name="use_stop_words" value="1" checked>
                                <span class="checkmark"></span>
                                –ò—Å–∫–ª—é—á–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏ —Å –±–∞–∑–æ–≤—ã–º–∏ —Å—Ç–æ–ø-—Å–ª–æ–≤–∞–º–∏ (—Å—Ç–∞–∂–µ—Ä, junior, —É–¥–∞–ª–µ–Ω–Ω–æ –∏ —Ç.–¥.)
                            </label>
                        </div>

                        <div class="param-group">
                            <label>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–æ–ø-—Å–ª–æ–≤–∞ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)</label>
                            <input type="text" name="custom_stop_words" placeholder="—Ñ—Ä–∏–ª–∞–Ω—Å, –ø–æ–¥—Ä–∞–±–æ—Ç–∫–∞, –±–µ–∑ –æ–ø—ã—Ç–∞" class="form-input">
                        </div>
                    </div>
                </div>

                <!-- –í—ã–±–æ—Ä —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∏—Å–µ–º -->
                <div class="form-section">
                    <h3>‚úâÔ∏è –°–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∏—Å—å–º–∞</h3>
                    <div class="cover-letters-info">
                        <p>–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–∏—Å–µ–º. –ü—Ä–∏ –æ—Ç–∫–ª–∏–∫–µ –±—É–¥–µ—Ç —Å–ª—É—á–∞–π–Ω–æ –≤—ã–±–∏—Ä–∞—Ç—å—Å—è –æ–¥–Ω–æ –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö.</p>
                        <a href="{{ route('cover-letters') }}" target="_blank" class="manage-letters-link">
                            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∏—Å—å–º–∞–º–∏
                        </a>
                    </div>

                    @if(empty($coverLetters))
                        <div class="alert alert-info">
                            <p>–£ –≤–∞—Å –Ω–µ—Ç —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∏—Å–µ–º. <a href="{{ route('cover-letters') }}">–°–æ–∑–¥–∞–π—Ç–µ –∏—Ö</a> –¥–ª—è –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞.</p>
                        </div>
                    @else
                        <div class="cover-letters-selection">
                            @foreach($coverLetters as $letter)
                                <label class="letter-option">
                                    <input type="checkbox" name="cover_letters[]" value="{{ $letter['content'] }}">
                                    <div class="letter-card">
                                        <h4>{{ $letter['title'] }}</h4>
                                        <p class="letter-preview">{{ Str::limit($letter['content'], 100) }}</p>
                                        <small>–°–æ–∑–¥–∞–Ω–æ: {{ date('d.m.Y', strtotime($letter['created_at'])) }}</small>
                                    </div>
                                </label>
                            @endforeach
                        </div>
                    @endif
                </div>

                <!-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ -->
                <div class="form-section">
                    <h3>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏</h3>

                    <div class="automation-params">
                        <div class="param-row">
                            <div class="param-group">
                                <label>–ú–∞–∫—Å–∏–º—É–º –≤–∞–∫–∞–Ω—Å–∏–π –¥–ª—è –æ—Ç–∫–ª–∏–∫–∞ *</label>
                                <input type="number" name="max_vacancies" value="20" min="1" max="100" required class="form-input">
                                <small>–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–µ –±–æ–ª–µ–µ 50 –∑–∞ —Ä–∞–∑</small>
                            </div>

                            <div class="param-group">
                                <label>–ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ—Ç–∫–ª–∏–∫–∞–º–∏ (—Å–µ–∫) *</label>
                                <input type="number" name="delay_seconds" value="5" min="3" max="60" required class="form-input">
                                <small>–ú–∏–Ω–∏–º—É–º 3 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏</small>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è -->
                <div class="form-actions">
                    <button type="button" id="previewBtn" class="btn btn-secondary">
                        üîç –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä
                    </button>
                    <button type="submit" id="startBtn" class="btn btn-primary" disabled>
                        üöÄ –ù–∞—á–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–∫–ª–∏–∫
                    </button>
                </div>
            </form>
        </div>

        <!-- –ü—Ä–µ–≤—å—é –≤–∞–∫–∞–Ω—Å–∏–π -->
        <div id="previewSection" class="preview-section" style="display: none;">
            <h3>üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –¥–ª—è –æ—Ç–∫–ª–∏–∫–∞</h3>
            <div class="preview-info">
                <p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞. –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–∫–ª—é—á–∏—Ç—å –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏.</p>
            </div>
            <div id="previewContent"></div>
            <div class="preview-actions">
                <button type="button" id="confirmApplyBtn" class="btn btn-primary">
                    ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –Ω–∞—á–∞—Ç—å –æ—Ç–∫–ª–∏–∫
                </button>
                <button type="button" id="cancelPreviewBtn" class="btn btn-secondary">
                    ‚ùå –û—Ç–º–µ–Ω–∏—Ç—å
                </button>
            </div>
        </div>

        <!-- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã -->
        <div id="resultsSection" class="results-section" style="display: none;">
            <h3>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</h3>
            <div id="resultsContent"></div>
        </div>

        <!-- –ü—Ä–æ–≥—Ä–µ—Å—Å -->
        <div id="progressSection" class="progress-section" style="display: none;">
            <h3>‚è≥ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞...</h3>
            <div class="progress-info">
                <div class="progress-bar">
                    <div id="progressFill" class="progress-fill"></div>
                </div>
                <div id="progressText" class="progress-text">–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...</div>
            </div>
            <div id="progressDetails" class="progress-details"></div>
        </div>
    </div>
</div>

<style>
.auto-apply-page {
    padding: 20px;
    max-width: 1200px;
    margin: 0 auto;
}

.auto-apply-header {
    text-align: center;
    margin-bottom: 30px;
}

.auto-apply-title {
    color: #2c3e50;
    margin-bottom: 10px;
}

.auto-apply-subtitle {
    color: #7f8c8d;
    font-size: 1.1em;
}

.form-section {
    background: white;
    border-radius: 12px;
    padding: 25px;
    margin-bottom: 20px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}

.form-section h3 {
    color: #34495e;
    margin-bottom: 20px;
    border-bottom: 2px solid #ecf0f1;
    padding-bottom: 10px;
}

.resume-selection {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 15px;
}

.resume-option {
    cursor: pointer;
}

.resume-card {
    border: 2px solid #ecf0f1;
    border-radius: 8px;
    padding: 15px;
    transition: all 0.3s ease;
}

.resume-option input[type="radio"]:checked + .resume-card {
    border-color: #3498db;
    background-color: #ebf3fd;
}

.resume-card h4 {
    margin: 0 0 8px 0;
    color: #2c3e50;
}

.resume-status {
    display: inline-block;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 0.8em;
    font-weight: bold;
}

.status-published {
    background-color: #d4edda;
    color: #155724;
}

.param-row {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px;
    margin-bottom: 15px;
}

.param-group {
    margin-bottom: 15px;
}

.param-group label {
    display: block;
    margin-bottom: 5px;
    font-weight: 600;
    color: #2c3e50;
}

.form-input, .form-select {
    width: 100%;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 6px;
    font-size: 14px;
    transition: border-color 0.3s ease;
}

.form-input:focus, .form-select:focus {
    border-color: #3498db;
    outline: none;
}

.checkbox-label {
    display: flex;
    align-items: center;
    cursor: pointer;
    font-weight: normal !important;
}

.checkbox-label input[type="checkbox"] {
    margin-right: 10px;
}

.cover-letters-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
    padding: 15px;
    background-color: #f8f9fa;
    border-radius: 6px;
}

.manage-letters-link {
    color: #3498db;
    text-decoration: none;
    font-weight: 600;
}

.cover-letters-selection {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 15px;
}

.letter-option {
    cursor: pointer;
}

.letter-card {
    border: 2px solid #ecf0f1;
    border-radius: 8px;
    padding: 15px;
    transition: all 0.3s ease;
}

.letter-option input[type="checkbox"]:checked + .letter-card {
    border-color: #27ae60;
    background-color: #eafaf1;
}

.letter-preview {
    color: #7f8c8d;
    margin: 8px 0;
    line-height: 1.4;
}

.form-actions {
    display: flex;
    gap: 15px;
    justify-content: center;
    margin-top: 30px;
}

.btn {
    padding: 12px 24px;
    border: none;
    border-radius: 6px;
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: 8px;
}

.btn-primary {
    background-color: #3498db;
    color: white;
}

.btn-primary:hover:not(:disabled) {
    background-color: #2980b9;
}

.btn-secondary {
    background-color: #95a5a6;
    color: white;
}

.btn-secondary:hover {
    background-color: #7f8c8d;
}

.btn:disabled {
    background-color: #bdc3c7;
    cursor: not-allowed;
}

.results-section, .progress-section, .preview-section {
    background: white;
    border-radius: 12px;
    padding: 25px;
    margin-top: 20px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}

.preview-info {
    background-color: #f8f9fa;
    padding: 15px;
    border-radius: 6px;
    margin-bottom: 20px;
    border-left: 4px solid #3498db;
}

.preview-list {
    max-height: 400px;
    overflow-y: auto;
    border: 1px solid #ecf0f1;
    border-radius: 6px;
}

.preview-vacancy {
    display: flex;
    align-items: center;
    padding: 12px 16px;
    border-bottom: 1px solid #ecf0f1;
    transition: background-color 0.2s ease;
}

.preview-vacancy:hover {
    background-color: #f8f9fa;
}

.preview-vacancy:last-child {
    border-bottom: none;
}

.vacancy-checkbox {
    margin-right: 12px;
    transform: scale(1.2);
}

.vacancy-info {
    flex: 1;
}

.vacancy-title {
    font-weight: 600;
    color: #2c3e50;
    margin: 0 0 4px 0;
    font-size: 14px;
}

.vacancy-details {
    font-size: 12px;
    color: #7f8c8d;
    display: flex;
    gap: 12px;
    flex-wrap: wrap;
}

.vacancy-company {
    font-weight: 500;
}

.vacancy-salary {
    color: #27ae60;
    font-weight: 500;
}

.vacancy-external {
    margin-left: 8px;
}

.vacancy-external a {
    color: #3498db;
    text-decoration: none;
    font-size: 12px;
}

.preview-actions {
    display: flex;
    gap: 15px;
    justify-content: center;
    margin-top: 20px;
    padding-top: 20px;
    border-top: 1px solid #ecf0f1;
}

.preview-stats {
    background-color: #e8f5e8;
    padding: 12px;
    border-radius: 6px;
    margin-bottom: 15px;
    text-align: center;
    font-weight: 600;
    color: #2c3e50;
}

.progress-bar {
    width: 100%;
    height: 20px;
    background-color: #ecf0f1;
    border-radius: 10px;
    overflow: hidden;
    margin-bottom: 15px;
}

.progress-fill {
    height: 100%;
    background-color: #3498db;
    width: 0%;
    transition: width 0.3s ease;
}

.progress-text {
    text-align: center;
    font-weight: 600;
    color: #2c3e50;
}

.progress-details {
    margin-top: 15px;
    padding: 15px;
    background-color: #f8f9fa;
    border-radius: 6px;
    font-family: monospace;
    font-size: 14px;
    max-height: 200px;
    overflow-y: auto;
}

.alert {
    padding: 15px;
    border-radius: 6px;
    margin-bottom: 15px;
}

.alert-warning {
    background-color: #fff3cd;
    border: 1px solid #ffeaa7;
    color: #856404;
}

.alert-info {
    background-color: #d1ecf1;
    border: 1px solid #bee5eb;
    color: #0c5460;
}

@media (max-width: 768px) {
    .param-row {
        grid-template-columns: 1fr;
    }

    .form-actions {
        flex-direction: column;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('autoApplyForm');
    const previewBtn = document.getElementById('previewBtn');
    const startBtn = document.getElementById('startBtn');
    const resultsSection = document.getElementById('resultsSection');
    const progressSection = document.getElementById('progressSection');
    const previewSection = document.getElementById('previewSection');
    const confirmApplyBtn = document.getElementById('confirmApplyBtn');
    const cancelPreviewBtn = document.getElementById('cancelPreviewBtn');

    let currentVacancies = [];

    // –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É —Å—Ç–∞—Ä—Ç–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ä–µ–∑—é–º–µ
    const resumeInputs = document.querySelectorAll('input[name="resume_id"]');
    resumeInputs.forEach(input => {
        input.addEventListener('change', function() {
            startBtn.disabled = false;
            previewBtn.disabled = false;
        });
    });

    // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä
    previewBtn.addEventListener('click', function() {
        showPreview();
    });

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–∫–ª–∏–∫–∞
    confirmApplyBtn.addEventListener('click', function() {
        const selectedVacancies = getSelectedVacancies();
        if (selectedVacancies.length === 0) {
            alert('–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –≤–∞–∫–∞–Ω—Å–∏—é –¥–ª—è –æ—Ç–∫–ª–∏–∫–∞');
            return;
        }
        executeAutoApply(selectedVacancies);
    });

    // –û—Ç–º–µ–Ω–∞ –ø—Ä–µ–≤—å—é
    cancelPreviewBtn.addEventListener('click', function() {
        previewSection.style.display = 'none';
        currentVacancies = [];
    });

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã (–ø—Ä—è–º–æ–π –∑–∞–ø—É—Å–∫ –±–µ–∑ –ø—Ä–µ–≤—å—é)
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        showPreview();
    });

    function showPreview() {
        const formData = new FormData(form);

        // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
        previewBtn.disabled = true;
        startBtn.disabled = true;

        fetch('{{ route("auto-apply.preview") }}', {
            method: 'POST',
            body: formData,
            headers: {
                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                currentVacancies = data.vacancies;
                displayVacanciesPreview(data.vacancies);
                previewSection.style.display = 'block';
                resultsSection.style.display = 'none';
                progressSection.style.display = 'none';
            } else {
                showError(data.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–µ–≤—å—é –≤–∞–∫–∞–Ω—Å–∏–π');
            }
        })
        .catch(error => {
            showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞: ' + error.message);
        })
        .finally(() => {
            // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
            previewBtn.disabled = false;
            startBtn.disabled = false;
        });
    }

    function displayVacanciesPreview(vacancies) {
        const html = `
            <div class="preview-stats">
                –ù–∞–π–¥–µ–Ω–æ –≤–∞–∫–∞–Ω—Å–∏–π: ${vacancies.length}. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è.
            </div>
            <div class="preview-list">
                ${vacancies.map(vacancy => `
                    <div class="preview-vacancy">
                        <input type="checkbox" class="vacancy-checkbox" value="${vacancy.id}" checked>
                        <div class="vacancy-info">
                            <div class="vacancy-title">${vacancy.name}</div>
                            <div class="vacancy-details">
                                <span class="vacancy-company">${vacancy.company}</span>
                                <span class="vacancy-area">${vacancy.area}</span>
                                <span class="vacancy-salary">${vacancy.salary}</span>
                                <span class="vacancy-date">${vacancy.published_at}</span>
                            </div>
                        </div>
                        <div class="vacancy-external">
                            <a href="${vacancy.url}" target="_blank">üîó –û—Ç–∫—Ä—ã—Ç—å</a>
                        </div>
                    </div>
                `).join('')}
            </div>
        `;

        document.getElementById('previewContent').innerHTML = html;
    }

    function getSelectedVacancies() {
        const checkboxes = document.querySelectorAll('.vacancy-checkbox:checked');
        return Array.from(checkboxes).map(cb => parseInt(cb.value));
    }

    function executeAutoApply(vacancyIds) {
        const formData = new FormData();
        formData.append('resume_id', document.querySelector('input[name="resume_id"]:checked').value);
        formData.append('_token', document.querySelector('meta[name="csrf-token"]').getAttribute('content'));

        // –î–æ–±–∞–≤–ª—è–µ–º ID –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π
        vacancyIds.forEach(id => {
            formData.append('vacancy_ids[]', id);
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∏—Å—å–º–∞
        const selectedLetters = document.querySelectorAll('input[name="cover_letters[]"]:checked');
        selectedLetters.forEach(letter => {
            formData.append('cover_letters[]', letter.value);
        });

        // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–≤—å—é –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        previewSection.style.display = 'none';
        progressSection.style.display = 'block';
        resultsSection.style.display = 'none';

        updateProgress(0, '–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∞–≤—Ç–æ–æ—Ç–∫–ª–∏–∫–∞...');

        fetch('{{ route("auto-apply.execute") }}', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                updateProgress(100, '–ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
                showTaskResults(data);
            } else {
                updateProgress(0, '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏');
                showError(data.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
            }
        })
        .catch(error => {
            updateProgress(0, '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');
            showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞: ' + error.message);
        });
    }

    function updateProgress(percent, text) {
        document.getElementById('progressFill').style.width = percent + '%';
        document.getElementById('progressText').textContent = text;
    }

        function showTaskResults(data) {
        const html = `
            <div class="results-summary">
                <h4>‚úÖ –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ</h4>
                <div class="task-info">
                    <p><strong>ID –∑–∞–¥–∞—á–∏:</strong> ${data.task_id}</p>
                    <p><strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π:</strong> ${data.total_vacancies}</p>
                    <p><strong>–°—Ç–∞—Ç—É—Å:</strong> –ó–∞–¥–∞—á–∞ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ</p>
                    <p class="task-note">
                        üí° –ó–∞–¥–∞—á–∞ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ.
                        –û—Ç–∫–ª–∏–∫–∏ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏.
                    </p>
                </div>
            </div>
        `;

        document.getElementById('resultsContent').innerHTML = html;
        resultsSection.style.display = 'block';
        progressSection.style.display = 'none';
    }

    function showError(message) {
        const html = `
            <div class="error-result">
                <h4>‚ùå –û—à–∏–±–∫–∞</h4>
                <p>${message}</p>
            </div>
        `;

        document.getElementById('resultsContent').innerHTML = html;
        resultsSection.style.display = 'block';
        progressSection.style.display = 'none';
    }
});
</script>
@endsection
